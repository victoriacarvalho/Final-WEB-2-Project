version: "3.8"

services:
  nameserver:
    image: openjdk:17
    container_name: nameserver
    ports:
      - "8761:8761"
    expose:
      - "8761"
    volumes:
      - ./nameserver:/app
    working_dir: /app
    command: ./mvnw spring-boot:run -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    networks:
      - app-network

  gateway:
    image: openjdk:17
    container_name: gateway
    ports:
      - "8080:8080"
    expose:
      - "8080"
    volumes:
      - ./gateway:/app
    working_dir: /app
    command: ./mvnw spring-boot:run -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006"
    depends_on:
      - nameserver
    networks:
      - app-network

  users-service:
    image: openjdk:17
    container_name: users-service
    ports:
      - "8081:8081"
    expose:
      - "8081"
    volumes:
      - ./user:/app
    working_dir: /app
    command: ./mvnw spring-boot:run -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007"
    depends_on:
      - nameserver
      - postgres-users
    networks:
      - app-network

  sales-service:
    image: openjdk:17
    container_name: sales-service
    ports:
      - "8082:8082"
    expose:
      - "8082"
    volumes:
      - ./sales:/app
    working_dir: /app
    command: ./mvnw spring-boot:run -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5009"
    depends_on:
      - nameserver
      - postgres-sales
      - users-service
    networks:
      - app-network

  # NOVO SERVIÃ‡O DE INVESTIMENTOS ADICIONADO AQUI
  investments-service:
    image: openjdk:17
    container_name: investments-service
    ports:
      - "8083:8083"
    expose:
      - "8083"
    volumes:
      - ./investments:/app
    working_dir: /app
    command: ./mvnw spring-boot:run -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008"
    depends_on:
      - nameserver
      - postgres-investments
    networks:
      - app-network

  notifications-service:
    image: openjdk:17
    container_name: notifications-service
    ports:
      - "8084:8084"
    expose:
      - "8084"
    volumes:
      - ./notifications:/app
    working_dir: /app
    command: ./mvnw spring-boot:run -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5010"
    depends_on:
      - nameserver
      - postgres-notification
    networks:
      - app-network

  postgres-users:
    image: postgres
    container_name: postgres-users
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=db_users
      - POSTGRES_USER=user_users
      - POSTGRES_PASSWORD=pass_users
    volumes:
      - ./01-create-database-users.sql:/docker-entrypoint-initdb.d/01-create-database-users.sql
    networks:
      - app-network

  postgres-sales:
    image: postgres
    container_name: postgres-sales
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=db_sales
      - POSTGRES_USER=user_sales
      - POSTGRES_PASSWORD=pass_sales
    volumes:
      - ./02-create-database-sales.sql:/docker-entrypoint-initdb.d/02-create-database-sales.sql
    networks:
      - app-network

  # NOVO BANCO DE DADOS DE INVESTIMENTOS ADICIONADO AQUI
  postgres-investments:
    image: postgres
    container_name: postgres-investments
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_DB=db_investments
      - POSTGRES_USER=user_investments
      - POSTGRES_PASSWORD=pass_investments
    volumes:
      - ./investments/04-create-database-investments.sql:/docker-entrypoint-initdb.d/04-create-database-investments.sql
    networks:
      - app-network

  postgres-notification:
    image: postgres
    container_name: postgres-notification
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=db_notifications
      - POSTGRES_USER=user_notifications
      - POSTGRES_PASSWORD=pass_notifications
    volumes:
      - ./03-create-database-notification.sql:/docker-entrypoint-initdb.d/03-create-database-notification.sql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
